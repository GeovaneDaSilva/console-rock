.modal.fade id="config-#{app.id}" tabindex="-1" role="dialog" aria-labelledby="config-app-modal-label" aria-hidden="true"
  .modal-dialog.modal-lg
    = bootstrap_form_tag url: account_app_config_path(account, app), method: :put do |f|
      .modal-content
        .modal-header
          button type="button" class="close" data-dismiss="modal" aria-label="Close"
            span aria-hidden="true" &times;
          h4#config-app-modal-label.nomargin #{app.title} App Configuration
          h5.text-muted.nomargin = account.name
        .modal-body.cyberterrorist-network-connection-modal
          - if app.send("#{current_account.type.downcase}_configuration_scope?")
            - if lookup_context.exists?(app.configuration_type, "apps/configs", true)
              = render partial: "apps/configs/#{app.configuration_type}", locals: { f: f, config: (account.app_config_for_app(app)&.merged_config || APP_CONFIGS[app.configuration_type]), account: account, app_id: app.id }

            = render partial: "apps/configs/admin_config", locals: { f: f, config: account.app_config_for_app(app)&.config.to_h, account: account }
          - else
            p This App must be configured at the <b> #{app.configuration_scopes.map(&:humanize).join(" or ")} </b> Level.

        - if app.send("#{current_account.type.downcase}_configuration_scope?")
          .modal-footer.text-right
            - if current_account.app_configs.where(app: app).first
              = link_to account_app_config_path(current_account, app), method: :delete, class: "btn btn-link text-danger", data: { confirm: "Are you sure you want to remove this configuration?" } do
                i.fa.fa-trash
                |  Remove

              = f.submit "Update", class: "btn btn-primary"
            - elsif !APP_CONFIGS[app.configuration_type].blank?
              = f.submit "Create", class: "btn btn-primary"
