---
  - include_vars: "../vars/{{ env }}/common.yml"
  - include_vars: "../vars/{{ env }}/{{ type }}.yml"

  - name: "Provision {{ env }} {{ type }} ec2 box"
    ec2:
      key_name: "{{ ec2_keypair }}"
      group: "{{ ec2_security_group }}"
      instance_type: "{{ ec2_instance_type }}"
      image: "{{ ec2_image }}"
      instance_tags: '{"type":"{{ec2_tag_type}}","env":"{{ec2_tag_env}}","role":"{{ec2_tag_env}}-{{ec2_tag_type}}" }'
      assign_public_ip: "{{ ec2_public_ip }}"
      vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
      region: "{{ ec2_region }}"
      monitoring: yes
      wait: true
      count_tag:
        role: "{{ec2_tag_env}}-{{ec2_tag_type}}"
      exact_count: "{{ ec2_count }}"
    register: ec2

  - name: Register instances as ELB targets
    shell: "aws elbv2 register-targets --target-group-arn arn:aws:elasticloadbalancing:{{ ec2_region }}:{{ elbv2_target_group }} --targets Id={{ item.id }}"
    with_items: "{{ ec2.instances }}"
    when: type == "webserver"

  - name: Wait for the instances to boot by checking the ssh port
    wait_for: host={{item.public_ip}} port=22 delay=5 timeout=380 state=started
    with_items: "{{ ec2.instances }}"

  - name: Associate elastic IP with utility host
    ec2_eip:
      device_id: "{{ item.id }}"
      ip: "{{ elastic_ip }}"
    with_items: "{{ ec2.instances }}"
    when: "elastic_ip is defined"

  - name: Wait for the elastic IP to be associated
    wait_for: host={{elastic_ip}} port=22 timeout=380 state=started
    when: "elastic_ip is defined"
